/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package studentloansystem;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import java.awt.event.MouseMotionAdapter;
import java.awt.Cursor;
import java.awt.event.MouseEvent;

/**
 *
 * @author edlution
 */
public class LoanApplications extends javax.swing.JInternalFrame {

    /**
     * Creates new form LoanApplications
     */
    public LoanApplications() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI)this.getUI();
        ui.setNorthPane(null);
        
        //JOptionPane.showMessageDialog(null, "" + loanApplications);
    }
    public void viewApplications(){
                     //perform dbOperation
        ConnectionString dbOperation = new ConnectionString();
        DefaultTableModel tbModel = (DefaultTableModel)JTableLoanApplications.getModel();
        tbModel.setRowCount(0);
        
        try{
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/studentloansystem", "root", "");
            String queryViewLoanApplications = "SELECT l.id, l.amount , s.last_name, s.first_name, s.middle_name, s.is_active FROM student_table s JOIN loan_table l ON s.id = l.student_id WHERE s.is_active = 1;";
            PreparedStatement psViewLoanApplications = conn.prepareStatement(queryViewLoanApplications);
            
            
           ResultSet rs = psViewLoanApplications.executeQuery();
            while(rs.next()){
                String loanID = String.valueOf(rs.getInt("l.id"));
                String fn = rs.getString("s.first_name");
                String mn = rs.getString("s.middle_name");
                String ln = rs.getString("s.last_name");
                String studentName = fn + " " + mn + " " + ln;
                String amount= String.valueOf(rs.getDouble("l.amount"));
                String status = String.valueOf(rs.getBoolean("s.is_active"));
                
                String[] tbData =  {loanID, studentName, amount, status};
                tbModel.addRow(tbData);
            }
             
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null, "Error viewLoanApplications() :  " + ex.getMessage());
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        JTableLoanApplications = new javax.swing.JTable();

        setBackground(new java.awt.Color(211, 250, 215));
        
        ConnectionString dbOperation = new ConnectionString();
        List<String[]> applicationRecords = dbOperation.viewLoanApplications();
        //JOptionPane.showMessageDialog(null, applicationRecords);
        
        DefaultTableModel model = new DefaultTableModel(new Object[][]{}, new String[]{"LACode", "Name", "Amount", "Action"});

        for (String[] applicationRecord : applicationRecords) {
            model.addRow(applicationRecord);
        }
        
        JTableLoanApplications.setModel(model);
        

        jScrollPane1.addMouseMotionListener(new MouseMotionAdapter() {
        	@Override
        	public void mouseMoved(MouseEvent e) {// Get the row index of the mouse position
                int row = JTableLoanApplications.rowAtPoint(e.getPoint());

                // Highlight the row
                if (row >= 0 && row < JTableLoanApplications.getRowCount()) {
                    JTableLoanApplications.setRowSelectionInterval(row, row);
                }

                // Change the cursor to indicate hover
                JTableLoanApplications.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
            
        	}
        });


        
        
/*
 *         JTableLoanApplications.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {1111, "Erica Sample", 12300.02, null},
                {1111, "Erica Sample", 12300.02, null},
                {applicationRecords[0], applicationRecords[1],applicationRecords[2], applicationRecords[3]},
                {null, null, null, null}
            },
            new String [] {
                "LACode", "Name", "Amount", "Action"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
 */
        JTableLoanApplications.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(JTableLoanApplications);
        JTableLoanApplications.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.TRAILING)
        		.addGroup(Alignment.LEADING, layout.createSequentialGroup()
        			.addGap(19)
        			.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 938, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(190, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addGap(19)
        			.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 327, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(136, Short.MAX_VALUE))
        );
        getContentPane().setLayout(layout);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public class Main {
        public static void main(String[] args) {
            // Create a new JFrame to contain the JDesktopPane
            JFrame frame = new JFrame();
            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

            // Create a new JDesktopPane
            JDesktopPane desktop = new JDesktopPane();

            // Create a new Home JInternalFrame and add it to the JDesktopPane
            LoanApplications loanApplications = new LoanApplications();
            loanApplications.setTitle("Loan Applications");
            loanApplications.setSize(975, 359);
            desktop.add(loanApplications);

            // Add the JDesktopPane to the JFrame
            frame.getContentPane().add(desktop);

            // Set the JFrame size and make it visible
            frame.setSize(1024, 768);
            frame.setVisible(true);

            // Move the Home JInternalFrame to the center of the JDesktopPane
            loanApplications.setLocation(desktop.getWidth() / 2 - loanApplications.getWidth() / 2, desktop.getHeight() / 2 - loanApplications.getHeight() / 2);
            
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTableLoanApplications;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
